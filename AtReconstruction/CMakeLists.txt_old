# Create a library called "libAtReco" which includes the source files given in the array .

set(INCLUDE_DIRECTORIES
${HDF5_INCLUDE_DIR}
${ROOT_INCLUDE_DIR}
${Boost_INCLUDE_DIRS}
${BASE_INCLUDE_DIRECTORIES}
${PCL_INCLUDE_DIRS}
# Add all the folders having header files you used in the code.
${CMAKE_SOURCE_DIR}/AtMap
${CMAKE_SOURCE_DIR}/par
${CMAKE_SOURCE_DIR}/reco
${CMAKE_SOURCE_DIR}/reco/GETDecoder
${CMAKE_SOURCE_DIR}/reco/GETDecoder2
${CMAKE_SOURCE_DIR}/reco/AtDecoder
${CMAKE_SOURCE_DIR}/reco/AtPulseAnalyzer
${CMAKE_SOURCE_DIR}/reco/HierarchicalClustering
${CMAKE_SOURCE_DIR}/reco/HoughTransformation
${CMAKE_SOURCE_DIR}/reco/AtProtoPhiReco
${CMAKE_SOURCE_DIR}/reco/VMEDecoder
${CMAKE_SOURCE_DIR}/reco/AtMinimization
${CMAKE_SOURCE_DIR}/reco/AtAnalysis
${CMAKE_SOURCE_DIR}/reco/AtRansac
${CMAKE_SOURCE_DIR}/reco/AtPatternRecognition
${CMAKE_SOURCE_DIR}/tpc

)

include_directories(${INCLUDE_DIRECTORIES})

set(LINK_DIRECTORIES
${ROOT_LIBRARY_DIR}
${FAIRROOT_LIBRARY_DIR}
${Boost_LIBRARY_DIRS}
${PCL_LIBRARY_DIRS}
${PCL_LIBRARIES}
)

if(PCL_FOUND)
add_definitions(${PCL_DEFINITIONS})
endif()


link_directories(${LINK_DIRECTORIES})

set(SRCS
# Add all the source files below this line. Those must have cc for their extension.
GETDecoder/GETDecoder.cc
GETDecoder/GETFrame.cc
GETDecoder/GETMath.cc
GETDecoder/GETPlot.cc

GETDecoder2/GETDecoder2.cc
GETDecoder2/GETFrameInfo.cc

GETDecoder2/GETHeaderBase.cc
GETDecoder2/GETBasicFrameHeader.cc
GETDecoder2/GETLayerHeader.cc

GETDecoder2/GETTopologyFrame.cc
GETDecoder2/GETBasicFrame.cc
GETDecoder2/GETCoboFrame.cc
GETDecoder2/GETLayeredFrame.cc

GETDecoder2/GETMath2.cc
GETDecoder2/GETFileChecker.cc

AtDecoder/AtCore.cc
AtDecoder/AtCore2.cc
AtDecoder/AtPad.cc
AtDecoder/AtRawEvent.cc
AtDecoder/AtHit.cc
AtDecoder/AtEvent.cc
AtDecoder/AtProtoEvent.cc
AtDecoder/AtProtoEventAna.cc
AtDecoder/AtTrackingEventAna.cc
AtDecoder/AtPatternEvent.cc
AtDecoder/AtProtoQuadrant.cc
AtDecoder/AtPedestal.cc
AtDecoder/AtTrack.cc
AtDecoder/AtHDFParser.cc

AtPulseAnalyzer/AtPSA.cc
AtPulseAnalyzer/AtPSASimple.cc
AtPulseAnalyzer/AtPSASimple2.cc
AtPulseAnalyzer/AtPSAProto.cc
AtPulseAnalyzer/AtPSAProtoFull.cc
AtPulseAnalyzer/AtPSAFull.cc
AtPulseAnalyzer/AtCalibration.cc

HierarchicalClustering/AtCubicSplineFit.cc
HierarchicalClustering/AtFindVertex.cc
HierarchicalClustering/AtHierarchicalClusteringHc.cc
HierarchicalClustering/AtHierarchicalClusteringSmoothenCloud.cc
HierarchicalClustering/AtTrajectory.cc


HoughTransformation/AtHoughSpace.cc
HoughTransformation/AtHoughSpaceLine.cc
HoughTransformation/AtHoughSpaceCircle.cc

AtProtoPhiReco/AtPhiReco.cc
AtProtoPhiReco/AtPhiRecoSimple.cc
AtProtoPhiReco/AtPhiRecoTriple.cc

VMEDecoder/VMEDecoder.cc
VMEDecoder/VMECore.cc
VMEDecoder/AtRawIC.cc
VMEDecoder/VMERawEvent.cc

AtMinimization/AtMinimization.cc
AtMinimization/AtMCMinimization.cc
AtMinimization/AtMCQMinimization.cc

AtAnalysis/AtAnalysis.cc
AtAnalysis/AtProtoAnalysis.cc
AtAnalysis/AtTrackingAnalysis.cc
AtAnalysis/Atd2HeAnalysis.cc

AtRansac/AtRansac.cc

AtPatternRecognition/AtRansacMod.cc
AtPatternRecognition/AtMlesacMod.cc
AtPatternRecognition/AtLmedsMod.cc
AtPatternRecognition/AtPRA.cc
AtPatternRecognition/AtTrackFinderHC.cc
AtPatternRecognition/smoothenCloud.cc
AtPatternRecognition/msd.cc
AtPatternRecognition/cluster.cc
AtPatternRecognition/hc.cc
AtPatternRecognition/fastcluster.cc


AtDecoderTask.cc
AtDecoder2Task.cc
AtHDFParserTask.cc
AtPSAtask.cc
AtPhiRecoTask.cc
AtHoughTask.cc
AtVMEUnpackTask.cc
AtAnalysisTask.cc
AtRansacTask.cc
AtHierarchicalClusteringTask.cc
AtPRAtask.cc

)

# Adding libraries that depend on PCL
if(PCL_FOUND)
MESSAGE("${Green} libAtTPCReco - Building PCL classes: RANSAC, TrackFinder, PSAFilter ${ColourReset} ")
set(SRCS ${SRCS} 
AtRansac/AtRansac.cc
AtPulseAnalyzer/AtPSAFilter.cc
AtPatternRecognition/AtTrackFinderHC.cc
AtPatternRecognition/smoothenCloud.cc
AtPatternRecognition/msd.cc
AtPatternRecognition/cluster.cc
AtPatternRecognition/hc.cc
AtPatternRecognition/fastcluster.cc
)
endif()

CHANGE_FILE_EXTENSION(*.cc *.h HEADERS "${SRCS}")

Set(LINKDEF AtTPCRecoLinkDef.h)
Set(LIBRARY_NAME AtTPCReco)
Set(DEPENDENCIES
    Base
    FairLogger::FairLogger
#   Cling
#    MCStack
    XMLParser
# Add all library names your code depending on.
# Basically those are the libraries in the header files' directory.
    AtTpcMap
    AtPar
    Spectrum
    ${HDF5_LIBRARIES}
    ${Boost_LOG_LIBRARY}
    ${Boost_LOG_SETUP_LIBRARY}
    ${Boost_THREAD_LIBRARY}
    ${Boost_DAtE_TIME_LIBRARY}
    ${Boost_FILESYSTEM_LIBRARY}
    ${Boost_SYSTEM_LIBRARY}
    ${PCL_LIBRARIES}
)



GENERAtE_LIBRARY()
